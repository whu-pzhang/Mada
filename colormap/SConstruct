# -*- coding: utf-8 -*-
from rsf.proj import *

Fetch('mona.img', 'imgs')

Flow('mona', 'mona.img',
     '''
     echo n1=512 n2=513 in=$SOURCE data_format=native_uchar |
     dd type=float
     ''', stdin=0)

colors = {
    'i': 'Greyscale',
    'j': 'Jet',
    't': 'Traffic',
    'h': 'Hot',
    'p': 'Pink',
    'b': 'Bone',
    'f': 'Flag',
    'a': 'Rainbow',
    'c': 'Cool',
    'l': 'Linear',
    'e': 'Blue-white-red',
    'g': 'Black-white-red',
    'H': 'Hot Reversed',
    'iC': 'Greyscale Clipped',
}

monas = []

import collections

for col in collections.OrderedDict(sorted(colors.items())).keys():
    if col != 'H' and col != 'iC':
        mona = 'mona-%s' % col
        monas.append(mona)
        Plot(mona, 'mona',
             '''
             window n2=100 f2=125 |
             grey allpos=y pclip=100 scalebar=y crowd1=0.8
             color=%s title="%s (color=%s)"
             transp=n wantaxis=n titlesz=20 font=6
             ''' % (col, colors[col], col))

Plot('mona1', monas[0:6], 'OverUnderAniso')
Plot('mona2', monas[6:12], 'OverUnderAniso')
Result('mona', 'mona1 mona2', 'SideBySideAniso', vppen='txscale=2')

for col in ('h', 'H'):
    mona = 'mona+%s' % col
    if col == 'H':
        mona = 'mona+caph'
    Plot(mona, 'mona',
         '''
         grey allpos=y pclip=100
         color=%s title="%s (color=%s)"
         transp=n wantaxis=n
         ''' % (col, colors[col], col))
Result('monacap', 'mona+h mona+caph',
       'SideBySideIso', vppen='ysize=10 xsize=10')

for col in ('i', 'iC'):
    mona = 'mona+%s' % col
    Plot(mona, 'mona',
         '''
         grey allpos=y pclip=98 screenratio=1
         color=%s title="%s (color=%s)"
         transp=n wantaxis=n
         ''' % (col, colors[col], col))
Result('monaclip', 'mona+i mona+iC', 'SideBySideIso', vppen='ysize=10 xsize=10')

colors = {
    'cubeyf1': 'Perceptual Rainbow',
    'gist_earth': 'GIST Earth',
    'linearlfb': 'LinearL Face Based',
    'x': 'Cube Helix',
    'lb': 'Light Bartlein',
    'seismic': 'Seismic-OpendTect',
    'izoaz': 'Isoluminant Azimuth',
    'montag': 'Spectral Lightness',
    'viridis': 'Default Matplotlib'
}

for col in colors.keys():
    Result(col, 'mona',
           '''
           grey allpos=y pclip=100 scalebar=y crowd1=0.8
           color=%s title="%s (color=%s)"
           transp=n wantaxis=n screenratio=1 titlesz=8
           ''' % (col, colors[col], col))


colors = {
    'cubeyf1': 'Perceptual Rainbow',
    'gist_earth': 'GIST Earth',
    'linearlfb': 'LinearL Face Based',
    'seismic': 'Seismic-OpendTect',
    'izoaz': 'Isoluminant Azimuth',
    'montag': 'Spectral Lightness',
    'viridis': 'Default Matplotlib',
}

# Plot colorbar
Flow('bar', None, 'math n1=16 output=x1')

bars = []

for key, value in colors.items():
    Plot(key + '-bar', 'bar',
         '''
        grey allpos=y pclip=100 color=%s title="%s(color=%s)" wantaxis=n
        screenht=2 screenwd=10 transp=n wheretitle=t fontsz=20 font=4
        ''' % (key, value, key))
    bars.append(key + '-bar')


Plot('colorbars1', bars[0:4], 'OverUnderAniso', vppen='ysize=4 xsize=10')
Plot('colorbars2', bars[4:7], 'OverUnderAniso', vppen='ysize=4 xsize=10')
Result('colorbars', 'colorbars1 colorbars2', 'SideBySideIso',
                    vppen='ysize=10 xsize=12 txscale=1.5')
End()
